// Code generated by prismic-ts-codegen. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for Author documents */
interface AuthorDocumentData {
    /**
     * Name field in *Author*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: author.name
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    name: prismicT.KeyTextField;
    /**
     * Links field in *Author*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: author.links[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    links: prismicT.GroupField<Simplify<AuthorDocumentDataLinksItem>>;
    /**
     * Avatar field in *Author*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: author.avatar
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    avatar: prismicT.ImageField<never>;
}
/**
 * Item in Author → Links
 *
 */
export interface AuthorDocumentDataLinksItem {
    /**
     * Link field in *Author → Links*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: author.links[].link
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    link: prismicT.LinkField;
    /**
     * Logo field in *Author → Links*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: author.links[].logo
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    logo: prismicT.ImageField<never>;
}
/**
 * Author document from Prismic
 *
 * - **API ID**: `author`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type AuthorDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<AuthorDocumentData>, "author", Lang>;
/** Content for Blog Post documents */
interface BlogPostDocumentData {
    /**
     * Title field in *Blog Post*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: blog_post.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * Category field in *Blog Post*
     *
     * - **Field Type**: Content Relationship
     * - **Placeholder**: *None*
     * - **API ID Path**: blog_post.category
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    category: prismicT.RelationField<"category">;
    /**
     * Authos field in *Blog Post*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: blog_post.author[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    author: prismicT.GroupField<Simplify<BlogPostDocumentDataAuthorItem>>;
    /**
     * date field in *Blog Post*
     *
     * - **Field Type**: Date
     * - **Placeholder**: *None*
     * - **API ID Path**: blog_post.date
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/date
     *
     */
    date: prismicT.DateField;
    /**
     * Thumbnail field in *Blog Post*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: blog_post.thumbnail
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    thumbnail: prismicT.ImageField<never>;
    /**
     * Summary field in *Blog Post*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: Write a summary in 3 sentences
     * - **API ID Path**: blog_post.summary
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    summary: prismicT.RichTextField;
    /**
     * Slice Zone field in *Blog Post*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: blog_post.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<BlogPostDocumentDataSlicesSlice>;
}
/**
 * Item in Blog Post → Authos
 *
 */
export interface BlogPostDocumentDataAuthorItem {
    /**
     * author field in *Blog Post → Authos*
     *
     * - **Field Type**: Content Relationship
     * - **Placeholder**: *None*
     * - **API ID Path**: blog_post.author[].author
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    author: prismicT.RelationField<"author">;
}
/**
 * Slice for *Blog Post → Slice Zone*
 *
 */
type BlogPostDocumentDataSlicesSlice = ContentSlice;
/**
 * Blog Post document from Prismic
 *
 * - **API ID**: `blog_post`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogPostDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<BlogPostDocumentData>, "blog_post", Lang>;
/** Content for Category documents */
interface CategoryDocumentData {
    /**
     * Title field in *Category*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: category.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * Description field in *Category*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: category.description
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Thumbnail field in *Category*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: category.thumbnail
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    thumbnail: prismicT.ImageField<never>;
}
/**
 * Category document from Prismic
 *
 * - **API ID**: `category`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type CategoryDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<CategoryDocumentData>, "category", Lang>;
/** Content for Series documents */
interface SeriesDocumentData {
    /**
     * Title field in *Series*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: series.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * To Be Published field in *Series*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: List of posts to be published
     * - **API ID Path**: series.to_be_published
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    to_be_published: prismicT.RichTextField;
}
/**
 * Series document from Prismic
 *
 * - **API ID**: `series`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SeriesDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<SeriesDocumentData>, "series", Lang>;
export type AllDocumentTypes = AuthorDocument | BlogPostDocument | CategoryDocument | SeriesDocument;
/**
 * Primary content in RichContent → Primary
 *
 */
interface ContentSliceDefaultPrimary {
    /**
     * Content field in *RichContent → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: content.primary.content
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    content: prismicT.RichTextField;
}
/**
 * Default variation for RichContent Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Content`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ContentSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<ContentSliceDefaultPrimary>, never>;
/**
 * Slice variation for *RichContent*
 *
 */
type ContentSliceVariation = ContentSliceDefault;
/**
 * RichContent Shared Slice
 *
 * - **API ID**: `content`
 * - **Description**: `Content`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ContentSlice = prismicT.SharedSlice<"content", ContentSliceVariation>;
/**
 * Primary content in Embed → Primary
 *
 */
interface EmbedSliceDefaultPrimary {
    /**
     * embed field in *Embed → Primary*
     *
     * - **Field Type**: Embed
     * - **Placeholder**: *None*
     * - **API ID Path**: embed.primary.embed
     * - **Documentation**: https://prismic.io/docs/core-concepts/embed
     *
     */
    embed: prismicT.EmbedField;
}
/**
 * Default variation for Embed Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Embed`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type EmbedSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<EmbedSliceDefaultPrimary>, never>;
/**
 * Slice variation for *Embed*
 *
 */
type EmbedSliceVariation = EmbedSliceDefault;
/**
 * Embed Shared Slice
 *
 * - **API ID**: `embed`
 * - **Description**: `Embed`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type EmbedSlice = prismicT.SharedSlice<"embed", EmbedSliceVariation>;
/**
 * Item in Gallery → Items
 *
 */
export interface GallerySliceDefaultItem {
    /**
     * images field in *Gallery → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: gallery.items[].images
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    images: prismicT.ImageField<never>;
}
/**
 * Default variation for Gallery Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Gallery`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type GallerySliceDefault = prismicT.SharedSliceVariation<"default", Record<string, never>, Simplify<GallerySliceDefaultItem>>;
/**
 * Slice variation for *Gallery*
 *
 */
type GallerySliceVariation = GallerySliceDefault;
/**
 * Gallery Shared Slice
 *
 * - **API ID**: `gallery`
 * - **Description**: `Gallery`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type GallerySlice = prismicT.SharedSlice<"gallery", GallerySliceVariation>;
/**
 * Primary content in Section → Primary
 *
 */
interface PostSliceDefaultPrimary {
    /**
     * Title field in *Section → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: post.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *Section → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: post.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * image field in *Section → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: post.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
}
/**
 * Default variation for Section Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Post`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type PostSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<PostSliceDefaultPrimary>, never>;
/**
 * Slice variation for *Section*
 *
 */
type PostSliceVariation = PostSliceDefault;
/**
 * Section Shared Slice
 *
 * - **API ID**: `post`
 * - **Description**: `Post`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type PostSlice = prismicT.SharedSlice<"post", PostSliceVariation>;
/**
 * Primary content in Quote → Primary
 *
 */
interface QuoteSliceDefaultPrimary {
    /**
     * Quote field in *Quote → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: Enter the quote
     * - **API ID Path**: quote.primary.quote
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    quote: prismicT.RichTextField;
    /**
     * Author field in *Quote → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: Name of the author
     * - **API ID Path**: quote.primary.quote_author
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    quote_author: prismicT.RichTextField;
}
/**
 * Default variation for Quote Slice
 *
 * - **API ID**: `default`
 * - **Description**: `Quote`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type QuoteSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<QuoteSliceDefaultPrimary>, never>;
/**
 * Slice variation for *Quote*
 *
 */
type QuoteSliceVariation = QuoteSliceDefault;
/**
 * Quote Shared Slice
 *
 * - **API ID**: `quote`
 * - **Description**: `Quote`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type QuoteSlice = prismicT.SharedSlice<"quote", QuoteSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { AuthorDocumentData, AuthorDocumentDataLinksItem, AuthorDocument, BlogPostDocumentData, BlogPostDocumentDataAuthorItem, BlogPostDocumentDataSlicesSlice, BlogPostDocument, CategoryDocumentData, CategoryDocument, SeriesDocumentData, SeriesDocument, AllDocumentTypes, ContentSliceDefaultPrimary, ContentSliceDefault, ContentSliceVariation, ContentSlice, EmbedSliceDefaultPrimary, EmbedSliceDefault, EmbedSliceVariation, EmbedSlice, GallerySliceDefaultItem, GallerySliceDefault, GallerySliceVariation, GallerySlice, PostSliceDefaultPrimary, PostSliceDefault, PostSliceVariation, PostSlice, QuoteSliceDefaultPrimary, QuoteSliceDefault, QuoteSliceVariation, QuoteSlice };
    }
}
